#!/bin/sh
#
# git2 - handle multiple git repositories in one directory
# Copyright (C) 2016 Simon Walz, http://sw.nerdbox.de/


# exchange files
exchange_files() {
	basefile="$1"
	append_old="$2"
	append_new="$3"
	if test -f "${basefile}"
	then
		mv "${basefile}" "${basefile}_${append_old}"
	fi
	if test -f "${basefile}_${append_new}"
	then
		mv "${basefile}_${append_new}" "${basefile}"
	fi
}


# move git dependent files
move_git_files() {
	gitfile="$1"
	append=`echo "${GITTWO_DIRNAME}" | sed -e 's/\.//g'`
	exchange_files "${gitfile}" "git1" "${append}"
}
# move back the git dependent files:
move_git_files_back() {
	gitfile="$1"
	append=`echo "${GITTWO_DIRNAME}" | sed -e 's/\.//g'`
	exchange_files "${gitfile}" "${append}" "git1"
}

if test -z "${GITTWO_DIRNAME}"
then
	GITTWO_DIRNAME=.git2
fi

# find gittwo base dir:
GITTWO_BASE=.
ldir=
while test \! -d "${ldir}${GITTWO_DIRNAME}"
do
	ldir="${ldir}../"
	cd "${ldir}" >/dev/null
	GITTWO_BASE=`pwd`
	cd - >/dev/null
	if test "x${GITTWO_BASE}" = "x/" && test \! -d "/${GITTWO_DIRNAME}"
	then
		#echo "warning: Not a git repository (or any of the parent directories): ${GITTWO_DIRNAME}"
		GITTWO_BASE="."
		break
	fi
done
GITTWO_DIR="${GITTWO_BASE}/${GITTWO_DIRNAME}"

if test "x$1" = "x"
then
	echo "git2 base dir: ${GITTWO_DIR}"
	exit 0
fi
if test "x$1" = "xgit2_exclude"
then
	append=`echo "${GITTWO_DIRNAME}" | sed -e 's/\.//g'`
	echo "${GITTWO_DIRNAME}" >${GITTWO_BASE}/.git/info/exclude
	git2 ls-files | sed -e 's/.gitignore/.gitignore_${append}/g' | sed -e 's/.gitattributes/.attributes_${append}/g' >>${GITTWO_BASE}/.git/info/exclude
	exit 0
fi
if test "x$1" = "xhelp"
then
	git help
	echo
	echo "   git2_exclude   set exclude file of git1 to the files of git2"
	echo "   git2_swap      swap git1 and git2"
	exit 0
fi


# exclude git files in git two:
if test -d "${GITTWO_DIR}"
then
	echo "${GITTWO_DIRNAME}" >${GITTWO_DIR}/info/exclude
	git ls-files 2>/dev/null | sed -e 's/.gitignore/.gitignore_git1/g' | sed -e 's/.gitattributes/.attributes_git1/g' >>${GITTWO_DIR}/info/exclude
fi

# move git dependent files
move_git_files "${GITTWO_BASE}/.gitignore"
move_git_files "${GITTWO_BASE}/.gitattributes"

# exec the git command:
# http://git-scm.com/book/es/v2/Git-Internals-Environment-Variables
GIT_WORK_TREE="${GITTWO_BASE}" GIT_DIR="${GITTWO_DIR}" git "$@"
EXIT_STATE=$?

# move back the git dependent files:
move_git_files_back "${GITTWO_BASE}/.gitignore"
move_git_files_back "${GITTWO_BASE}/.gitattributes"

# exit with exit state of the git command
exit ${EXIT_STATE}

